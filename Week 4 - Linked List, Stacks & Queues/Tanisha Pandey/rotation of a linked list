#include <bits/stdc++.h>
using namespace std;

struct LLNode{
  int data;
  LLNode *next;  
};


void rotate(LLNode** head, int k)
{
  LLNode* temp = *head;
  int count = 1;
  if (k==0)
  {
    return ;
  }
  
  while(count<k && temp != NULL) {
      temp = temp->next;
      count++;
  }
  
  if (temp==NULL)
  {
    return;
  }
  
  LLNode* KthNode = temp;
  
  while(temp->next != NULL) {
      temp = temp->next;
  }
  
  temp->next = *head;
  *head = KthNode->next;
  KthNode->next = NULL;
}

void insertAtBeginning(LLNode**head,int dataToBeInserted)
{
  LLNode*curr=new LLNode;
  curr->data=dataToBeInserted;
  curr->next=NULL;
  if(*head==NULL) 
      *head=curr;
    
  else 
    {
      curr->next=*head;
      *head=curr;
    }
    
  
}
void display(LLNode**head)
{
  LLNode*temp=*head;
  while(temp!=NULL) 
    {
      if(temp->next!=NULL)
      cout<<temp->data<<" ->";
      else
      cout<<temp->data;
      
      temp=temp->next; 
    }
    
  cout<<endl;
}
int main() 
{    
  
  LLNode *head = NULL;
  int k = 4;
  insertAtBeginning(&head,6);
  insertAtBeginning(&head,16);
  insertAtBeginning(&head,15);
  insertAtBeginning(&head,50);
  insertAtBeginning(&head,1);
  insertAtBeginning(&head,23);
  
  
  display(&head);
  rotate(&head, k);
  display(&head);
  return 0;
}
